const selectCallback = function (i, e) {
  var t,
    a,
    o = $(".product-" + e.product.id),
    n = $(".notify-form-" + e.product.id),
    l = $(".product_form, .shopify-product-form", o),
    s = l.data("variant-inventory"),
    r = $(".notify_form__inputs"),
    d = Shopify.translation.notify_email,
    c = Shopify.translation.notify_email_send,
    p = r.data("url");

  if (i) {
    null != i.title && ((t = i.title.replace(/"/g, "&quot;")), (a = Shopify.translation.notify_message_first + t + Shopify.translation.notify_message_last + p))
  } else {
    a = Shopify.translation.notify_message_first + Shopify.translation.notify_message_last + p
  }

  var m,
    u,
    y =
      (r.hasClass("customer--true") ?
        '<input type="hidden" class="notify_email" name="contact[email]" id="contact[email]" value="{{ customer.email }}" />' :
        '<input required type="email" class="notify_email" name="contact[email]" id="contact[email]" placeholder="' + d + '" value="{{ contact.fields.email }}" />') +
      '<input type="hidden" name="challenge" value="false" /><input type="hidden" name="contact[body]" class="notify_form_message" data-body="' +
      a +
      '" value="' +
      a +
      '" /><input class="action_button" type="submit" value="' +
      c +
      '" style="margin-bottom:0px" />';
  if (
    (i &&
      i.featured_image &&
      o.is(":visible") &&
      $(".js-product-gallery, .js-gallery-modal", o).each(function () {
        var e,
          t = $(this),
          a = Flickity.data(this);
        t.is(":visible") && null != a && ((e = $('[data-image-id="' + i.featured_media.id + '"]').data("index")), a.select(e, !1, !0));
      }),
      "false" == $("#buildring").val() && $("#buildring").val("true"),
      i)
  )
    if (
      (s &&
        s.forEach(function (e) {
          e.id === i.id && ((i.inventory_quantity = e.inventory_quantity), (i.inventory_management = e.inventory_management), (i.inventory_policy = e.inventory_policy));
        }),
        $(".sku span", o).text(i.sku),
        "swatches" == Shopify.theme_settings.product_form_style)
    )
      for (var f = 0, h = i.options.length; f < h; f++) {
        var g = l.find('.swatch[data-option-index="' + escape(f) + '"] :radio[value="' + i.options[f].replace(/\"/g, '\\"') + '"]');
        g.length && (g.get(0).checked = !0);
      }
    else $(".notify_form_message", o).attr("value", $(".notify_form_message", o).data("body") + " - " + t);
  i && 1 == i.available ?
    (i.price < i.compare_at_price ?
      ($(".was_price", o).html('<span class="money">' + Shopify.formatMoney(i.compare_at_price, $("body").data("money-format")) + "</span>"),
        $(".savings", o).html(
          Shopify.translation.savings_text +
          " " +
          parseInt((100 * (i.compare_at_price - i.price)) / i.compare_at_price) +
          '% (<span class="money">' +
          Shopify.formatMoney(i.compare_at_price - i.price, $("body").data("money-format")) +
          "</span>)"
        ),
        $(".current_price", o).parent().addClass("sale")) :
      ($(".was_price", o).html(""), $(".savings", o).html(""), $(".current_price", o).parent().removeClass("sale")),
      i.inventory_management && 0 < i.inventory_quantity ?
        (Shopify.theme_settings.display_inventory_left &&
          ((items_left_text = 1 == i.inventory_quantity ? Shopify.translation.one_item_left : Shopify.translation.items_left_text),
            (m = parseInt(Shopify.theme_settings.inventory_threshold)),
            i.inventory_quantity <= m ? $(".items_left", o).html(i.inventory_quantity + " " + items_left_text) : $(".items_left", o).html("")),
          Shopify.theme_settings.limit_quantity && "deny" == i.inventory_policy && $(".quantity", o).attr("max", i.inventory_quantity)) :
        ($(".items_left", o).text(""), $(".quantity", o).removeAttr("max")),
      $(".sold_out", o).text(""),
      0 < i.price ?
        $(".current_price", o)
          .removeClass("sold_out")
          .html('<span class="money">' + Shopify.formatMoney(i.price, $("body").data("money-format")) + "</span>") :
        $(".current_price", o).removeClass("sold_out").html(Shopify.theme_settings.free_text),
      $(".add_to_cart", o).removeClass("disabled").removeAttr("disabled").find("span").text($(".add_to_cart", o).data("label")),
      $(".shopify-payment-button", o).removeClass("disabled"),
      $(".purchase-details__buttons", o).removeClass("product-is-unavailable"),
      $(".modal_price", o).removeClass("variant-unavailable"),
      n.hide(),
      r.empty()) :
    ((u = i ? Shopify.theme_settings.sold_out_text : Shopify.translation.unavailable_text),
      i ?
        (0 < i.price ? $(".current_price", o).html('<span class="money">' + Shopify.formatMoney(i.price, $("body").data("money-format")) + "</span>") : $(".current_price", o).html(Shopify.theme_settings.free_text),
          Shopify.theme_settings.display_sold_out_price && $(".current_price", o).parents(".price__container--display-price-true").addClass("has-margin-right"),
          $(".modal_price", o).removeClass("variant-unavailable")) :
        ($(".modal_price", o).addClass("variant-unavailable"),
          $(".current_price", o).html(""),
          $(".was_price", o).html(""),
          $(".savings", o).html(""),
          $(".current_price", o).parents(".price__container--display-price-true").removeClass("has-margin-right")),
      Shopify.theme_settings.display_sold_out_price || ($(".current_price", o).html(""), $(".was_price", o).html(""), $(".savings", o).html("")),
      $(".items_left", o).text(""),
      $(".quantity", o).removeAttr("max"),
      $(".sold_out", o).text(u),
      $(".purchase-details__buttons", o).addClass("product-is-unavailable"),
      $(".add_to_cart", o).addClass("disabled").attr("disabled", "disabled").find("span").text(u),
      $(".shopify-payment-button").addClass("disabled"),
      n.hide(),
      r.empty(),
      i && !i.available && (n.fadeIn(), r.empty(), r.append(y))),
    Currency.show_multiple_currencies && currencyConverter.convertCurrencies(),
    $(".affirm-as-low-as").attr("data-amount", i.price),
    $("span[itemprop=price]").attr("content", parseFloat(Math.round(100 * i.price) / 1e4).toFixed(2));
};
