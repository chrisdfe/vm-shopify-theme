/* ==================================================
#Image functions
#Recently viewed
#Load more / infinite load
#Filter products with AJAX
#Search autocomplete
#Sidebar filter on collection pages
#Misc
#Newsletter popup
#Currency converter
#Product Media Controls
#Plyr setup

/*============================================================================
  Recently viewed
==============================================================================*/

var recentlyViewed = {
  init: function () {

    var productHandle,
      rvCookie,
      rvProducts,
      displayProducts,
      rvProductArray;

    if ($('.js-product_section[data-rv-handle]').length) {
      productHandle = $('.js-product_section').data('rv-handle').toString();
      rvCookie = Cookies.get('recentlyViewed');
      rvProducts = recentlyViewed.getCookieProducts(rvCookie, productHandle);
    } else if ($('.recently-viewed__section').length) {
      rvCookie = Cookies.get('recentlyViewed');
      rvProducts = recentlyViewed.getCookieProducts(rvCookie, productHandle);
    } else if ($('.js-sidebar-recently-viewed').length) {
      rvCookie = Cookies.get('recentlyViewed');
      rvProducts = recentlyViewed.getCookieProducts(rvCookie, productHandle);
    }

    if (rvProducts) {
      rvProductArray = unescape(rvProducts).split(',');
    }

    if (productHandle) {
      if (!$.inArray(productHandle, rvProductArray) !== -1) {
        displayProducts = [];
        rvProductArray.unshift(productHandle);
        $.each(rvProductArray, function (i, el) {
          if ($.inArray(el, displayProducts) === -1) displayProducts.push(el);
        });
      }

      recentlyViewed.setCookieProducts(displayProducts);
    } else {
      displayProducts = rvProductArray;
    }

    if ($('.recently-viewed__section').length) {
      var parent = '.recently-viewed__section';
      var recentlyViewedProductsLoaded = $(parent).data('recently-viewed-items-loaded');

      if (recentlyViewedProductsLoaded) {
        return false;
      }

      recentlyViewed.getProductInformation(parent, displayProducts, productHandle);
    } else if ($('.js-recently-viewed .rv-main').length) {
      var parent = '.js-recently-viewed';
      var recentlyViewedProductsLoaded = $(parent).data('recently-viewed-items-loaded');

      if (recentlyViewedProductsLoaded) {
        return false;
      }

      recentlyViewed.getProductInformation(parent, displayProducts, productHandle);
    }

    if ($('.sidebar .js-sidebar-recently-viewed').length) {
      var parent = '.sidebar .js-sidebar-recently-viewed';
      var recentlyViewedProductsLoaded = $(parent).data('recently-viewed-items-loaded');
      if (recentlyViewedProductsLoaded) {
        return false;
      }

      if (productHandle) {
        recentlyViewed.getProductInformation(parent, displayProducts, productHandle);
      } else {
        recentlyViewed.getProductInformation(parent, displayProducts);
      }
    }

  },

  getCookieProducts: function (rvCookie, productHandle) {

    if (!rvCookie && productHandle) {
      Cookies.set('recentlyViewed', productHandle, { expires: 30, path: '/' });
      rvCookie = Cookies.get('recentlyViewed');
    } else {
      rvCookie = Cookies.get('recentlyViewed');
    }

    return rvCookie;
  },

  setCookieProducts: function (rvProductArray) {
    Cookies.set('recentlyViewed', escape(rvProductArray.join(',')), { expires: 30, path: '/' });
  },

  getProductInformation: function (parent, displayProducts, productHandle) {
    // Add data-attribute 'recently-viewed-items-loaded="true" to parent container
    $(parent).attr('data-recently-viewed-items-loaded', 'true');

    if (productHandle) {
      displayProducts.splice($.inArray(productHandle, displayProducts), 1);
    }

    var productLimit = $(parent).data('visible-products');

    if (productLimit && displayProducts) {
      displayProducts = displayProducts.slice(0, productLimit);
    }

    $.each(displayProducts, function (index, value) {

      if (value) {
        $(parent).removeClass('hidden');

        $(parent).parents('.sidebar-block').show();

        $.ajax({
          type: 'GET',
          url: '/products/' + value + '?view=rv',
          success: function (data) {

            var rvProduct = $(data).find('.js-recently-viewed-product');

            $(parent).find(' .rv-box-' + index).append(rvProduct);

            if (Currency.show_multiple_currencies) {
              currencyConverter.convertCurrencies();
            }
          },
          error: function (x, t, m) {
            console.log(x);
            console.log(t);
            console.log(m);
          },
          dataType: "html"
        });
      }

      if ($(parent).find('.rv-main').hasClass('js-rv-grid')) {
        if (displayProducts.length <= productLimit) {
          $('.js-rv-grid .thumbnail').eq(displayProducts.length).nextAll().addBack().remove();
        } else {
          $('.js-rv-grid .thumbnail').eq(productLimit).nextAll().addBack().remove();
        }
      }
    });
  },
}

/* ===============================================
  #Load more / infinite load
================================================== */

//Collection template

const enableLoadMoreProducts = function () {
  $('body').on('click', '.js-load-more a', function (e) {
    enableInfiniteScroll();
    e.stopPropagation();
    return false;
  });
}

constenableInfiniteScroll = function () {
  if ($('.collection-matrix').length) {
    new Waypoint.Infinite({
      element: $('.collection-matrix')[0],
      items: '.collection-matrix',
      more: '.load-more__btn',
      loadingClass: 'loading-in-progress',
      onBeforePageLoad: function () {
        $('.js-load-more').hide();
      },
      onAfterPageLoad: function (data) {
        $('.collection-matrix > .collection-matrix .thumbnail').unwrap('.collection-matrix');
        if (Shopify.theme_settings.enable_shopify_review_comments && Shopify.theme_settings.enable_shopify_collection_badges) {
          SPR.$(document).ready(function () {
            return SPR.registerCallbacks(),
              SPR.initRatingHandler(),
              SPR.initDomEls(),
              SPR.loadProducts(),
              SPR.loadBadges()
          })
        }
        if (Currency.show_multiple_currencies) {
          currencyConverter.convertCurrencies();
        }

        // Initialize shopify payment buttons
        if (Shopify.PaymentButton) {
          Shopify.PaymentButton.init();
        }
      }
    })
  }
}

//Search template

const enableLoadMoreSearch = function () {
  $('body').on('click', '.js-load-more a', function (e) {
    enableInfiniteSearchScroll();
    e.stopPropagation();
    return false;
  });
}

const enableInfiniteSearchScroll = function () {
  if ($('.search-matrix').length) {
    new Waypoint.Infinite({
      element: $('.search-matrix')[0],
      items: '.search-matrix',
      more: '.load-more__btn',
      loadingClass: 'loading-in-progress',
      onBeforePageLoad: function () {
        $('.js-load-more').hide();
      },
      onAfterPageLoad: function (data) {
        $('.search-matrix > .search-matrix .thumbnail').unwrap('.search-matrix');
        if (Shopify.theme_settings.enable_shopify_review_comments && Shopify.theme_settings.enable_shopify_collection_badges) {
          SPR.$(document).ready(function () {
            return SPR.registerCallbacks(),
              SPR.initRatingHandler(),
              SPR.initDomEls(),
              SPR.loadProducts(),
              SPR.loadBadges()
          })
        }
        if (Currency.show_multiple_currencies) {
          currencyConverter.convertCurrencies();
        }
        // Initialize shopify payment buttons
        if (Shopify.PaymentButton) {
          Shopify.PaymentButton.init();
        }
      }
    });
  }
}


/*============================================================================
  Filter Products with AJAX
==============================================================================*/

Shopify.queryParams = {};
if (location.search.length) {
  const aCouples = location.search.substr(1).split('&');
  aCouples.forEach(aCouple => {
    let aKeyValue = aCouple.split('=');
    if (aKeyValue.length > 1) {
      Shopify.queryParams[decodeURIComponent(aKeyValue[0])] = decodeURIComponent(aKeyValue[1]);
    }
  });
}

const quickFilter = {
  init: function () {
    var selectedOptions = [],
      query = '',
      currentTags = '',
      siteUrl = 'https://' + $.url('hostname'),
      url1 = $.url('1') ? '/' + $.url('1') + '/' : '',
      url2 = $.url('2') ? $.url('2') + '/' : '',
      url3 = $.url('3'),
      path = url1 + url2;

    //Handle dropdowns if they exist
    if ($('#sort-by').length) {
      query = $('#sort-by').val();
    } else {
      query = url('?sort_by');
    }

    if ($('#tag_filter').length) {
      var $tagFilterValue = $('#tag_filter').val();

      if ($('#tag_filter').data('default-collection') != $tagFilterValue) {
        urlTag = $tagFilterValue.substr($tagFilterValue.lastIndexOf('/') + 1);
        var tagFilterUrl = $tagFilterValue.substr($tagFilterValue)

        // apply the selected attribute to the proper option value in tag filter dropdown
        $('#tag_filter option').removeAttr('selected');
        $('#tag_filter option[value="' + tagFilterUrl + '"]').attr('selected', 'selected')

        if (urlTag != 'all') {
          if ($.inArray(urlTag, selectedOptions) > -1) {
            //Do nothing
          } else {
            selectedOptions.unshift(urlTag);
          }
        }
      }
    }

    //Add all checkbox values to array
    $('[data-option-filter] input:checked').each(function () {
      selectedOptions.push($(this).val());
    });
    selectedOptions = $.makeArray(selectedOptions);

    //Loop through tags to create string to update page url
    $.each(selectedOptions, function (i, value) {

      if (i != selectedOptions.length - 1) {
        currentTags += selectedOptions[i] + '+';
      } else {
        currentTags += selectedOptions[i];
      }

    });

    Shopify.queryParams.sort_by = query;
    query = '?' + $.param(Shopify.queryParams);

    quickFilter.processUrl(path, currentTags, query);
  },
  updateView: function (filterURL) {
    $.ajax({
      type: 'GET',
      url: filterURL,
      beforeSend: function () {
        $(".collection-matrix").addClass('fadeOut animated loading-in-progress filter-loading');
        Waypoint.destroyAll();
      },
      success: function (data) {
        $(".collection-matrix").removeClass('loading-in-progress');
        $(".collection-matrix").removeClass('filter-loading');
        var filteredBreadcrumb = $(data).find('.breadcrumb_text').html();
        $('.breadcrumb_text').html(filteredBreadcrumb);

        var filteredPagination = $(data).find('.paginate').html();
        $('.paginate').html(filteredPagination);

        var filteredSidebar = $(data).find('.sidebar').html();
        $('.sidebar').html(filteredSidebar);

        var filteredPageLinks = $(data).find('.paginate').html();
        $('.paginate').empty();
        $('.paginate').html(filteredPageLinks);

        var filteredData = $(data).find('.collection-matrix');
        $('.collection-matrix').remove();
        filteredData.insertBefore($('.load-more__icon'));

        window.history && window.history.pushState && window.history.pushState("", "", filterURL);

        if ($('.sidebar__collection-filter').length) {
          collectionSidebarFilter.init();
        }
        if (Shopify.theme_settings.pagination_type == 'infinite_scroll') {
          enableInfiniteScroll();
        }
        if (Currency.show_multiple_currencies) {
          currencyConverter.convertCurrencies();
        }
        if (Shopify.theme_settings.enable_shopify_review_comments && Shopify.theme_settings.enable_shopify_collection_badges) {
          SPR.$(document).ready(function () {
            return SPR.registerCallbacks(),
              SPR.initRatingHandler(),
              SPR.initDomEls(),
              SPR.loadProducts(),
              SPR.loadBadges()
          })
        }

        //Will reload recently viewed if present
        recentlyViewed.init();

        // Re-link swatches on inline quick-shop
        $(".js-product_section .product_form_options").each(function () {
          new Shopify.OptionSelectors($(this).data("select-id"), { product: $(this).data("product"), onVariantSelected: selectCallback, enableHistoryState: $(this).data("enable-state") });
        });

        // Initialize shopify payment buttons
        if (Shopify.PaymentButton) {
          Shopify.PaymentButton.init();
        }

        // fire global event to allow VM code to hook into this stuff
        window.dispatchEvent(new Event('collection-filters-updated'))
      },
      error: function (x, t, m) {
        console.log(x);
        console.log(t);
        console.log(m);
        location.replace(location.protocol + '//' + location.host + filterURL);

      },
      dataType: "html"
    });
  },
  processUrl: function (path, tags, query) {
    var query = query.replace(/\page=(\w+)&/, ''),
      urlString = '';

    urlString = path + tags + query;

    quickFilter.updateView(urlString);
  }
}

/*============================================================================
  Sidebar filter on collection pages
==============================================================================*/

var collectionSidebarFilter = {
  init: function () {

    $('.filter-active-tag input:checked').parents('.filter-active-tag').siblings('.filter-all-tags').hide();
    $('.toggle-all--true .toggle_list .filter-active-tag input:checked').parents('ul.toggle_list').prev().click();

    //checks if there is an active filter, and if so, to keep the tag filter dropdown open
    var queryString = window.location.search;
    if (queryString.indexOf("sort_by") > 0 && $('.toggle-all--true .toggle_list .filter-active-tag input').attr('checked')) {
      $('.sidebar__collection-filter > h4').addClass('active')
    }

    //Hide filters if types or vendors is in URL (can't be combined)
    if ($.url(2) === 'types' || $.url(2) === 'vendors') {
      $('.sidebar__collection-filter').remove();
    }

    $('.sidebar-block:empty').prev().css('border-bottom', 'none');

    //Will reload recently viewed if present
    recentlyViewed.init();
  },
  clearAllFilters: function () {
    $('[data-option-filter] input').prop('checked', false);
    $('[data-option-filter] input').trigger('change');

    //Will reload recently viewed if present
    recentlyViewed.init();
  },
  clearSelectedFilter: function (optionFilter) {
    // if the sidebar tag that is being cleared matched the tag inside of the tag filter dropdown, reset the dropdown value to it's default value
    if ($('#tag_filter').length) {
      if (optionFilter.find('[data-option-filter] input').val() === $('#tag_filter option:selected ').val().substr($('#tag_filter option:selected ').val().lastIndexOf('/') + 1)) {
        $('#tag_filter').val($('#tag_filter option:first').val())
      }
    }

    optionFilter.find('[data-option-filter] input').prop('checked', false);
    optionFilter.find('[data-option-filter] input').trigger('change');

    //Will reload recently viewed if present
    recentlyViewed.init();
  }
}

/*============================================================================
  Misc
==============================================================================*/

const utils = {
  createAccordion: function (container, tab, content) {
    var $container = $(container);
    var $tab = $(container).find(tab);
    var $content = $(container).find(content);
    var specificTab = container + ' ' + tab;

    //Check to see if need to rearrange product tabs to create accordion (backwards compatible)
    if (container.indexOf(".accordion-tabs") >= 0) {
      var rearrangedTabs = $.map($tab, function (v, i) { return [v, $content[i]]; });
      $container.empty();

      $.each(rearrangedTabs, function (index, value) {
        $container.append(this);
      });

      $content.removeClass('active');
      $container.find('.active').next().slideToggle();

      tab = container + '> a';
    }

    $(container).children('a').each(function (i, tab) {
      var tab = $(this);
      var tabValue = tab.attr('href'); //get tab id
      tab.attr('data-tab-value', tabValue); //set tab id in data attribute
      tab.removeAttr("href"); //remove href (to prevent url hash update)
    });

    $(container).find(tab + '.active').next().slideToggle();
    $('body').on('click', specificTab, function (e) {
      e.preventDefault();
      $(this).toggleClass('active');
      $(this).next().slideToggle();
    });
  },

  enableDisclosure: function () {
    var $disclosure = $('[data-disclosure]');
    var $toggle = $('[data-disclosure-toggle]');
    var $disclosureWrap = $('.disclosure__list-wrap');

    //Check if current opened menu is offscreen
    function checkOffScreen($openedToggle) {
      if ($openedToggle.siblings('.disclosure__list-wrap').is(':off-right')) {
        $openedToggle.siblings('.disclosure__list-wrap').addClass('disclosure--left');
      }
    }

    function closeDisclosures(ignoreTarget, currentTarget) {
      if (ignoreTarget === true) {
        $toggle.not(currentTarget).removeClass('is-clicked');
        $toggle.not(currentTarget).attr('aria-expanded', 'false');
      } else {
        $toggle.removeClass('is-clicked');
        $toggle.attr('aria-expanded', 'false');
      }

      $disclosureWrap.removeClass('disclosure--left');
    }

    //Close menus on ESC
    $('body').on('keyup', function (e) {
      if (e.which == '27') {
        closeDisclosures();
      }
    });

    //Close menus on hoverout
    $disclosure.on('mouseleave', function (e) {
      closeDisclosures();
    });

    //On click/focus event for toggling options
    $toggle.on('mouseenter focus', function (e) {
      //Close all other menus
      closeDisclosures(true, this);

      var $target = $(e.currentTarget);
      $target.attr('aria-expanded', 'true').addClass('is-clicked');
      checkOffScreen($target);
    });

    //When tabbing through, close dropdown when tabbing out of dropdown
    $('.disclosure__button').on('focusout', function (e) {
      //Close all other menus
      if (!$(e.relatedTarget).hasClass('disclosure__button') || $(e.relatedTarget).hasClass('disclosure__toggle')) {
        closeDisclosures();
      }
    });

    //Mobile toggle logic
    $toggle.on('touchstart', function (e) {
      if ($(window).width() < 798 || !/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
        var $target = $(e.currentTarget);

        closeDisclosures(true, this);

        if (!$target.hasClass('is-clicked')) {
          $target.attr('aria-expanded', 'true').addClass('is-clicked');
          checkOffScreen($target);
        } else {
          $target.attr('aria-expanded', 'false').removeClass('is-clicked');
          $disclosureWrap.removeClass('disclosure--left');
        }
      }
    })

  },
  unload: function ($target) {
    $('[data-disclosure]').off();
    $('[data-disclosure-toggle]').off();
  }
}
